"""Add Models

Revision ID: e46639c5921c
Revises:
Create Date: 2025-03-05 15:02:08.066988

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e46639c5921c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False, comment="체인 이름"),
        sa.Column(
            "layer",
            sa.Enum("L1", "L2", "L3", name="layer"),
            nullable=True,
            comment="L1,L2,L3",
        ),
        sa.Column("image", sa.String(), nullable=False, comment="체인 이미지"),
        sa.Column("home_page", sa.String(), nullable=False, comment="홈페이지"),
        sa.Column("discord", sa.String(), nullable=True, comment="디스코드 주소"),
        sa.Column("twitter", sa.String(), nullable=True, comment="트위터 주소"),
        sa.Column("twitter_handle", sa.String(), nullable=True, comment="트위터 핸들"),
        sa.Column("contract", sa.String(), nullable=True, comment="체인 계약 주소"),
        sa.Column(
            "test_contract", sa.String(), nullable=True, comment="테스트 계약 여부"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("contract"),
        sa.UniqueConstraint("test_contract"),
    )
    op.create_table(
        "user",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("nickname", sa.String(), nullable=False, comment="닉네임"),
        sa.Column("name", sa.String(), nullable=True, comment="이름"),
        sa.Column("phone_number", sa.String(), nullable=True, comment="휴대폰번호"),
        sa.Column("email", sa.String(), nullable=False, comment="이메일"),
        sa.Column("profile_image", sa.String(), nullable=True, comment="프로필 이미지"),
        sa.Column(
            "role",
            sa.Enum("SUBSCRIBER", "CERTIFICATE", "TEMP", "ADMIN", name="userrole"),
            nullable=False,
            comment="유저 권한",
        ),
        sa.Column("refresh_token", sa.String(), nullable=True, comment="리프레쉬 토큰"),
        sa.Column("signed_at", sa.DateTime(), nullable=False, comment="가입 시간"),
        sa.Column("updated_at", sa.DateTime(), nullable=True, comment="업데이트 시간"),
        sa.Column("withdrawal_at", sa.DateTime(), nullable=True, comment="탈퇴 시간"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mission",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "type",
            sa.Enum("WAIT_LIST", "WHITE_LIST", "VAULT", "QUEST", name="missiontype"),
            nullable=False,
            comment="미션 종류",
        ),
        sa.Column("title", sa.String(), nullable=False, comment="제목"),
        sa.Column("url", sa.String(), nullable=False, comment="미션 페이지 URL"),
        sa.Column("start_at", sa.DateTime(), nullable=False, comment="참여 시작 시간"),
        sa.Column("end_at", sa.DateTime(), nullable=False, comment="참여 종료 시간"),
        sa.Column("draw_at", sa.DateTime(), nullable=True, comment="추첨 시간"),
        sa.Column("reward_date", sa.Date(), nullable=True, comment="보상 시간"),
        sa.Column("project_id", sa.Uuid(), nullable=False, comment="프로젝트 id"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "post",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("title", sa.String(), nullable=False, comment="제목"),
        sa.Column("content", sa.String(), nullable=False, comment="본문"),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True, comment="업데이트 시간"),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="유저 id"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "wallet",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=True, comment="지갑 이름"),
        sa.Column("address", sa.String(), nullable=False, comment="지갑 주소"),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="유저 id"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "comment",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("content", sa.String(), nullable=False, comment="본문"),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="유저 id"),
        sa.Column("post_id", sa.Uuid(), nullable=False, comment="게시글 id"),
        sa.ForeignKeyConstraint(["post_id"], ["post.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("comment")
    op.drop_table("wallet")
    op.drop_table("post")
    op.drop_table("mission")
    op.drop_table("user")
    op.drop_table("project")
    # ### end Alembic commands ###
